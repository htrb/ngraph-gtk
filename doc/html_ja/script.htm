<HTML>
<HEAD>
<TITLE>Script</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#0000FF" ALINK="#0000FF" VLINK="#0000FF">
<A NAME="TOP">&nbsp;</A>
<A HREF="./ngraph.htm"><B>Ngraphスクリプト</B></A>
<UL>
<LI><A HREF="#SCRIPT">概要</A>
<LI><A HREF="#SCRIPT_SYNTAX">スクリプトの文法</A>
<LI><A HREF="#SCRIPT_STARTUP">スタートアップスクリプト</A>
<LI><A HREF="#COMMANDLINE">コマンドラインオプション</A>
</UL>

<BR>
<HR SIZE="5">
<BR>


<A NAME="SCRIPT">&nbsp;</A>
<A HREF="#TOP"><B>概要</B></A>
<BR>
<BLOCKQUOTE>
Ngraph はスクリプト言語(Ngraph スクリプト)のインタープリタを備えています。
グラフの設定(実際には各オブジェクトOBJECTのフィールド値)もNgraph スクリプト形式で保存されます。<BR>
</BLOCKQUOTE>

<BR>
<HR>
<BR>



<A NAME="SCRIPT_SYNTAX">&nbsp;</A>
<A HREF="#TOP"><B>スクリプトの文法</B></A>
<BR>
<BLOCKQUOTE>
Ngraph スクリプトの文法は， UNIX の sh (シェル) からジョブ制御機能を取り去り, オブジェクト操作命令を追加したものになっています。<BR>
shと同等の文法・コマンドは以下の通りです(sh の文法の詳細については UNIX のマニュアルを参照してください)。<BR>
<BR>
コマンド<BR>
<BLOCKQUOTE>
name1=val1 name2=val2 ... command arg1 arg2 arg3 ...
</BLOCKQUOTE>
コメント<BR>
<BLOCKQUOTE>
# comment
</BLOCKQUOTE>
制御構造 (for,  case,  if,  while,  until 文)<BR>
<BLOCKQUOTE>
for name [in word] do list done<BR>
case word in [patterm [|pattern] ...list;;] ... esac<BR>
if list then list [elif list then list]...[else list] fi<BR>
while list do list done<BR>
until list do list done<BR>
</BLOCKQUOTE>
関数定義 ({}は常に必要)<BR>
<BLOCKQUOTE>
name() { list; }
</BLOCKQUOTE>
ファイル名置換<BR>
<BLOCKQUOTE>
*?[]
</BLOCKQUOTE>
コマンド置換<BR>
<BLOCKQUOTE>
`command`
</BLOCKQUOTE>
変数定義<BR>
<BLOCKQUOTE>
name=value [ name=value ] ...
</BLOCKQUOTE>
変数置換<BR>
<BLOCKQUOTE>
$# $? $num $* $@<BR>
${name}<BR>
${name:-word}<BR>
${name:=word}<BR>
${name:?word}<BR>
${name:+word}<BR>
</BLOCKQUOTE>
リダイレクト・パイプ<BR>
<BLOCKQUOTE>
&lt; file<BR>
&lt;&lt; word<BR>
&gt; file<BR>
&gt;&gt; file<BR>
command | command<BR>
</BLOCKQUOTE>
特殊コマンド<BR>
<BLOCKQUOTE>
:<BR>
. file<BR>
break [n]<BR>
continue [n]<BR>
cd<BR>
echo<BR>
eval [arg]<BR>
exit [n]<BR>
export [name]<BR>
pwd<BR>
return [n]<BR>
set<BR>
shift [n]<BR>
unset<BR>
test<BR>
[<BR>
sleep<BR>
true<BR>
false<BR>
read [val]<BR>
</BLOCKQUOTE>
<BR>
<BR>
独自に追加した文法・コマンドは以下の通りです。<BR>
<BR>
オブジェクト定義 (objectのinstance_listのfieldにvalueを設定)<BR>
<BLOCKQUOTE>
object:instance_list:field=value
</BLOCKQUOTE>
オブジェクト置換 (objectのinstance_listのfieldの値)<BR>
<BLOCKQUOTE>
${object:instance_list:field=argument}
</BLOCKQUOTE>
オブジェクト操作コマンド<BR>
<BLOCKQUOTE>
new object [field=value,  ...]<BR>
del object:instance_list <BR>
exist object:instance_list <BR>
get object:instance_list [-write -filed -id -quote] field=argument ...<BR>
put object:instance_list field=value ...<BR>
exe object:instance_list field=argument ...<BR>
cpy object:instance1, instance2 field<BR>
move object:instance1, instance2<BR>
movetop object:instance<BR>
movelast object:instance<BR>
exch object:instance1, instance2<BR>
object [object1 object2 ...] [-name -version -parent -id -field -size -current -last -instnace -instances]<BR>
derive object [-instance]<BR>
</BLOCKQUOTE>
評価コマンド (数式expを評価)<BR>
<BLOCKQUOTE>
dexpr exp<BR>
iexpr exp<BR>
</BLOCKQUOTE>
</BLOCKQUOTE>

<BR>
<HR>
<BR>

<A NAME="SCRIPT_STARTUP">&nbsp;</A>
<A HREF="#TOP"><B>スタートアップスクリプト</B></A>
<BR>
<BLOCKQUOTE>
Ngraph は実行時に<BR>
<OL>
<LI>環境変数 NGRAPHHOME で指定されるディレクトリ<BR>
<LI>環境変数 HOME で指定されるディレクトリ<BR>
<LI>環境変数 NGRAPHLIB で指定されるディレクトリ<BR>
<LI>Ngraphをインストールしたディレクトリ<BR>
</OL>
をこの順番で検索し, はじめに見つかったスタートアップスクリプトファイル( _Ngraph)を自動的に読み込みます。<BR>
<BR>
<UL>
コマンドラインオプション
<UL>-i script_name</UL>
でスタートアップスクリプトを明示的に指定する事もできます。
</UL>
スタートアップスクリプトファイルはNgraph独自のマクロ言語(Ngraphスクリプト)で記述されており, ユーザがカスタマイズすることもできます。<BR>
<BR>
<UL>
<LI>Ngraph のコマンドラインオプションは(上記 -i オプションを除いて)全てスタートアップスクリプトファイルに渡されます。
<LI>配布状態では, スタートアップスクリプトファイルは
<OL>
<LI>起動するユーザインターフェースの指定(system::login_shell)
<LI>_Ngraph.ngp の読み込み(_Ngraph.ngp は[設定]-[初期状態として保存(グラフ)]で作成できます)
<LI>コマンドラインオプションの解析
</OL>
を行います。
</UL>
</BLOCKQUOTE>

<BR>
<HR>
<BR>


<A NAME="COMMANDLINE">&nbsp;</A>
<A HREF="#TOP"><B>コマンドラインオプション</B></A>
<BR>
<BLOCKQUOTE>
Ngraph を起動する時のコマンドラインオプションの形式は
<UL>ngraph [-i script_name] [option1 option2 ...]</UL>
で、-i オプションでスタートアップスクリプトを指定します。
残りのオプションは全てスタートアップスクリプトに渡され、その中で解析されます。
スタートアップスクリプトはユーザがカスタマイズする事ができるので、独自のコマンドラインオプションを作成する事ができます。<BR>
<BR>
配布状態のスタートアップスクリプト(.Ngraph)で有効なコマンドラインオプションは以下の通りです。
<DL>
<DT>-x num
<DD>X軸のデータカラムを num にします。</DD>
<DT>-y num
<DD>Y軸のデータカラムを num にします。</DD>
<DT>-d type
<DD>プロットタイプを type にします。</DD>
<DT>-m num
<DD>マークを num にします。</DD>
<DT>-o num
<DD>マークのサイズ num にします。</DD>
<DT>-l sylte
<DD>線種を style にします(-l "100 100" の様に指定)。</DD>
<DT>-w num
<DD>線幅を num にします。</DD>
<DT>-c R G B
<DD>プロット色を R G B にします。</DD>
<DT>-C R G B
<DD>第二プロット色を R G B にします。</DD>
<DT>-s num
<DD>先頭スキップ行を num にします。</DD>
<DT>-r num
<DD>読み込みステップ行数を num にします。</DD>
<DT>-f num
<DD>最終行数を num にします。</DD>
<DT>-vx num
<DD>隣接平均数を num にします。</DD>
<DT>-vy num
<DD>隣接平均数を num にします。</DD>
<DT>-mx math
<DD>変換数式を math にします。</DD>
<DT>-my math
<DD>変換数式を math にします。</DD>
<DT>-ex type
<DD>X軸のスケール方法を type (linear, log, inverse) にします。</DD>
<DT>-ey type
<DD>Y軸のスケール方法を type (linear, log, inverse) にします。</DD>
<DT>-zx min max inc
<DD>X軸のスケールを min, max, inc にします。</DD>
<DT>-zy min max inc
<DD>Y軸のスケールを min, max, inc にします。</DD>
<DT>-g
<DD>データファイルから設定を読み込みます。</DD>
</DL>
</BLOCKQUOTE>

<BR>
<HR>
<BR>

</BODY></HTML>


